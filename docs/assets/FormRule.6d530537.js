export default'/**\r\n * 表单验证\r\n */\r\nimport Vue from "vue";\r\nimport { MlForm, MlFormConfig } from "types/form";\r\n\r\nexport default Vue.extend({\r\n  name: "FormRule",\r\n  data() {\r\n    return {\r\n      formConfig: null as MlFormConfig,\r\n      formValue: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.formConfig = {\r\n      rules: {\r\n        name: [\r\n          { required: true, message: "请输入活动名称", trigger: "blur" },\r\n          { min: 3, max: 5, message: "长度在 3 到 5 个字符", trigger: "blur" },\r\n        ],\r\n      },\r\n      columns: [\r\n        {\r\n          type: "input",\r\n          label: "姓名",\r\n          prop: "name",\r\n          reg: /sdf/,\r\n          error: "请重新输入",\r\n        },\r\n        {\r\n          type: "input",\r\n          label: "长度",\r\n          prop: "length",\r\n          minlength: 12,\r\n        },\r\n        {\r\n          type: "select",\r\n          label: "性别",\r\n          prop: "type",\r\n          required: true,\r\n          options: [\r\n            { value: 1, label: "男" },\r\n            { value: 0, label: "女" },\r\n          ],\r\n        },\r\n        {\r\n          type: "input",\r\n          label: "密码",\r\n          prop: "pass",\r\n          required: true,\r\n          rules: [\r\n            {\r\n              validator: (rule, value, callback) => {\r\n                if (value === "") {\r\n                  callback(new Error("请输入密码"));\r\n                } else {\r\n                  if (this.formValue.checkPass !== "") {\r\n                    (this.$refs.form as MlForm).validateField("checkPass");\r\n                  }\r\n                  callback();\r\n                }\r\n              },\r\n              trigger: "blur",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          type: "input",\r\n          label: "确认密码",\r\n          prop: "checkPass",\r\n          required: true,\r\n          rules: [\r\n            {\r\n              validator: (rule, value, callback) => {\r\n                if (value === "") {\r\n                  callback(new Error("请再次输入密码"));\r\n                } else if (value !== this.formValue.pass) {\r\n                  callback(new Error("两次输入密码不一致!"));\r\n                } else {\r\n                  callback();\r\n                }\r\n              },\r\n              trigger: "blur",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    onSubmit() {\r\n      let form = this.$refs.form as MlForm;\r\n      form.validate();\r\n    },\r\n  },\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ml-form ref="form" config={this.formConfig} v-model={this.formValue}></ml-form>\r\n        <el-button onClick={this.onSubmit}>提交</el-button>\r\n      </div>\r\n    );\r\n  },\r\n});\r\n';
