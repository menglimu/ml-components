export default'/**\r\n * 表格的基础使用\r\n */\r\nimport { MlTable, MlTableProps } from "types/table";\r\nimport Vue from "vue";\r\n\r\nconst tableData = [\r\n  {\r\n    idCcNewsManage: "8f3122df-d0a0-4ee5-8d00-65c559c8d8e3",\r\n    newsCategory: "",\r\n    newsTitle: "1",\r\n    glanceNum: 0,\r\n    newsSort: 0,\r\n    publishTime: "2020-01-14 16:36:55",\r\n    newsSource: "1002",\r\n    newsStatus: "0",\r\n    newsPromulgator: "发布人",\r\n    newsModel: "2",\r\n    delFlag: "",\r\n    creatTime: "2020-01-14 16:19:56",\r\n    creatUser: "",\r\n    updateTime: "2020-02-25 16:58:06",\r\n    updateUser: "",\r\n    delUser: "",\r\n    remark: "",\r\n    newsContent: "<p>111111</p>",\r\n    sourceName: "",\r\n    modelName: "",\r\n    ids: "",\r\n    fileIds: [\r\n      "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1606369809299&di=af56d824b57283f20e7b5edd0bf99c05&imgtype=0&src=http%3A%2F%2Fa2.att.hudong.com%2F18%2F37%2F01300000342079124824374452584.jpg",\r\n      "https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1606369809299&di=af56d824b57283f20e7b5edd0bf99c05&imgtype=0&src=http%3A%2F%2Fa2.att.hudong.com%2F18%2F37%2F01300000342079124824374452584.jpg",\r\n    ],\r\n    svg: "activate",\r\n  },\r\n];\r\n\r\nconst tableRes = {\r\n  content: tableData,\r\n  // content: [], // tableData, // Array(6).fill(tableData[0]),\r\n  total: 1,\r\n};\r\n\r\nlet options = [\r\n  { label: "怼怼", value: 1 },\r\n  { label: "冠军", value: 2 },\r\n];\r\n\r\nexport default Vue.extend({\r\n  name: "TableBase",\r\n  data() {\r\n    return {\r\n      tableConfig: null as MlTableProps,\r\n      hideOneColumn: false,\r\n    };\r\n  },\r\n  created() {\r\n    this.tableConfig = {\r\n      searchConfig: {\r\n        config: {\r\n          columns: [\r\n            {\r\n              type: "string",\r\n              label: "通知公告",\r\n              prop: "title",\r\n            },\r\n            {\r\n              type: "select",\r\n              label: "通知类型",\r\n              prop: "type",\r\n              optionsGet: () => Promise.resolve(options),\r\n            },\r\n            {\r\n              type: "datetimerange",\r\n              label: "创建时间",\r\n              prop: "times",\r\n            },\r\n            {\r\n              type: "string",\r\n              label: "通知公告",\r\n              prop: "title1",\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      // 参数的转换函数。可以直接在api、的list中处理\r\n      beforeGetList: (type, params) => ({ ...params, a: 123 }),\r\n      afterGetList: (type, data) => console.log(type, data),\r\n      searchData: {},\r\n      outerBtn: [\r\n        { size: "small", name: "重新请求options", type: "primary", callback: this.reFormOptions },\r\n        {\r\n          evtType: "setValue",\r\n          size: "small",\r\n          name: "显示隐藏",\r\n          type: "primary",\r\n          showJudge: (data) => data.length > 0,\r\n        },\r\n        {\r\n          type: "text",\r\n          evtType: "mldelete",\r\n          name: "删除",\r\n        },\r\n      ],\r\n\r\n      innerBtn: [\r\n        {\r\n          type: "text",\r\n          evtType: "mldelete",\r\n          name: "删除",\r\n          showJudge: { newsTitle: "1", newsModel: "2" },\r\n        },\r\n      ],\r\n      paginationConfig: {\r\n        background: true,\r\n        pageSizes: [10, 20, 30, 40],\r\n        pageSize: 10,\r\n      },\r\n      config: {\r\n        selection: true, // 多选，默认true\r\n        index: true, // 序号 默认false\r\n        // tableTree: true, // 是否tree，属性表格，根据业务加上的\r\n        tableKey: "idCcNewsManage", // 主键，默认id\r\n        tableOptWidth: "130px", // 表格操作宽度\r\n        initSearch: true, // 初始化的时候，是否直接请求数据，\r\n        nodeData: {\r\n          props: {\r\n            height: "500px",\r\n          },\r\n        },\r\n        // 表格操作接口\r\n        api: {\r\n          list: (params) => {\r\n            console.log(JSON.stringify(params));\r\n            // const data = new Array(10).fill(tableData)\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                resolve(tableRes);\r\n              }, 5000);\r\n            });\r\n          },\r\n          delete: (ids, data) => {\r\n            console.log(ids, data);\r\n            this.onDelete();\r\n            return Promise.resolve();\r\n          },\r\n        },\r\n        columns: [\r\n          {\r\n            type: "string",\r\n            label: "排序",\r\n            prop: "newsSort",\r\n            sortable: "custom",\r\n          },\r\n          {\r\n            type: "string",\r\n            label: "标题",\r\n            prop: "newsTitle",\r\n            key: "newsTitle1", // 重复prop时，需要给其中一个指定一个不同的key\r\n            // sortable: true,\r\n            render: (h, params) => {\r\n              return (\r\n                <div\r\n                  onClick={this.onDetail.bind(this, params.row)}\r\n                  style={`color: #1EA1FF; text-decoration: underline;cursor: pointer;`}\r\n                >\r\n                  {params.row.newsTitle}\r\n                </div>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            type: "string",\r\n            label: "标题",\r\n            prop: "newsTitle",\r\n          },\r\n          {\r\n            type: "string",\r\n            label: "发布人",\r\n            prop: "newsPromulgator",\r\n            hide: () => this.hideOneColumn,\r\n          },\r\n          {\r\n            type: "string",\r\n            label: "浏览量",\r\n            prop: "glanceNum",\r\n          },\r\n          {\r\n            type: "svg",\r\n            label: "图标",\r\n            prop: "svg",\r\n            statusJudge: () => "success",\r\n            // icons: icons\r\n          },\r\n          {\r\n            label: "发布时间",\r\n            prop: "publishTime",\r\n            statusJudge: {\r\n              success: { newsTitle: "1", newsModel: "2" },\r\n              error: { newsTitle: "1", newsModel: "2" },\r\n              warning: { newsTitle: "1", newsModel: "2" },\r\n              done: { newsTitle: "1", newsModel: "2" },\r\n              failed: { newsTitle: "1", newsModel: "2" },\r\n            },\r\n            formatter: () => "slajdfkld",\r\n          },\r\n          {\r\n            label: "更新时间",\r\n            prop: "updateTime",\r\n          },\r\n          {\r\n            label: "创建时间",\r\n            prop: "creatTime",\r\n          },\r\n          {\r\n            type: "select",\r\n            label: "状态",\r\n            prop: "newsStatus",\r\n            options: [\r\n              { label: "已提交", value: "0" },\r\n              { label: "已上架", value: "1" },\r\n              { label: "已下架", value: "2" },\r\n            ],\r\n          },\r\n\r\n          {\r\n            type: "select",\r\n            label: "结构模式",\r\n            prop: "newsModel",\r\n            options: [\r\n              {\r\n                value: "1",\r\n                label: "上下结构",\r\n              },\r\n              {\r\n                value: "2",\r\n                label: "左右结构",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            type: "image",\r\n            label: "封面图片",\r\n            prop: "fileIds",\r\n            statusJudge: {\r\n              error: { newsTitle: "1", newsModel: "2" },\r\n            },\r\n          },\r\n          {\r\n            label: "自定义列",\r\n            prop: "fileIds",\r\n            renderColumn(h) {\r\n              return (\r\n                <el-table-column\r\n                  label="自定义列"\r\n                  scopedSlots={{\r\n                    default: () => {\r\n                      return <span>1234</span>;\r\n                    },\r\n                  }}\r\n                ></el-table-column>\r\n              );\r\n            },\r\n          },\r\n          // {\r\n          //   tag: \'ml-editor\', //\'c-table\',\r\n          //   label: \'新闻内容\',\r\n          //   prop: \'newsContent\',\r\n          //   block: true,\r\n          //   showTable: false\r\n          // }\r\n\r\n          // {\r\n          //   type: \'string\',\r\n          //   label: \'图标名称\',\r\n          //   prop: \'icon\',\r\n          //   showTable: true, // 是否在表格中展示\r\n          //    // 搜索时使用，默认false\r\n          //   addForm: true, // 新增时使用，默认true\r\n          //   editForm: true, // 编辑时使用，默认true\r\n          //   viewForm: true, // 查看是使用，默认true\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    onDelete() {\r\n      this.$message.success("删除xxxxx");\r\n    },\r\n    onDetail() {\r\n      this.$message.success("查看详情");\r\n      this.hideOneColumn = !this.hideOneColumn;\r\n    },\r\n    reFormOptions() {\r\n      options = [{ label: "易安", value: 1 }];\r\n      (this.$refs.mainTable as MlTable).mlForm.reloadOptions("type");\r\n    },\r\n  },\r\n  render() {\r\n    return <ml-table ref="mainTable" props={this.tableConfig}></ml-table>;\r\n  },\r\n});\r\n';
